{"version":3,"sources":["candy-machine.ts","components/Timeline/index.tsx","components/FishCarousel/index.tsx","components/CashbackProgress/index.tsx","components/SOLTicker/index.tsx","components/Team/index.tsx","Home.tsx","Whitepaper.tsx","components/Header/index.tsx","components/Footer/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","ms","Timeline","background","className","contentStyle","boxShadow","contentArrowStyle","borderRight","iconStyle","color","date","icon","style","href","FishCarousel","plugins","slidesToShowPlugin","options","numberOfSlides","breakpoints","src","preview","getCashbackSum","prices","counter","slice","forEach","element","parseInt","replace","getCashbackSumFormatted","sum","toString","getStep","cashbackEventCounter","cashbackRates","addText","preText","transition","accomplished","index","filter","width","CashbackProgress","solPrice","useState","setSolPrice","document","getElementById","useEffect","intervalId","setInterval","$","ajax","url","dataType","method","success","response","price","clearInterval","parseFloat","SOLTicker","progress","progressSteps","setProgress","setCounter","useProgress","Math","round","cashbackSteps","percent","hasStepZero","filledBackground","toFixed","Team","CounterText","styled","WalletDialogButton","FadeInAnimation","div","Button","keyframes","fadeInUp","FadeInDiv","renderCounter","days","hours","minutes","seconds","completed","Home","props","setBalance","setIsActive","setIsSoldOut","setItemsAvailable","setItemsRedeemed","setItemsRemaining","open","message","severity","undefined","startDate","setStartDate","useAnchorWallet","setCandyMachine","getBalance","balance","LAMPORTS_PER_SOL","onMount","onComplete","renderer","delay","useEasing","end","duration","separator","marginBottom","Whitepaper","textAlign","trigger","Header","target","to","label","height","margin","clear","Footer","display","getFullYear","process","network","Connection","startDateSeed","theme","createTheme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","padding","startIcon","marginRight","endIcon","marginLeft","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","path","txTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a3edf1c4.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","import React, { useState } from 'react';\nimport 'react-vertical-timeline-component/style.min.css';\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport { FaAffiliatetheme, FaChild, FaFlask, FaQuestion, FaClipboardList, FaBalanceScaleLeft, FaBalanceScale, FaBalanceScaleRight, FaCommentsDollar, FaDollarSign, FaCalendarWeek } from 'react-icons/fa';\nimport { FaBeer } from 'react-icons/fa';\n\nexport const Timeline = () => {\n  const background = \"linear-gradient(to right bottom, #0d2b59, #261d3f, #241427, #1a0b14, #000000)\"\n\n  return (\n    <VerticalTimeline>\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#2f8c1f', color: '#fff' }}\n      date=\"26th August 2021\"\n      icon={<FaFlask />}\n    >\n      <h2 style={{color: \"yellow\"}}>Planning Breeding of Secret Pond</h2>\n\n      <p>\n      The age of men is over. The time of the Koi has come. The pond's population is growing rapidly and will soon reach its objective of 1,111 unique, hand-drawn Koin Koi. A lot of breeding needs to be done to fullfill the big pond dream: To have bred only the most fabulous and amazing Koi and release them in the Solana Blockchain.\n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#2f8c1f', color: '#fff' }}\n      icon={<FaAffiliatetheme />}\n    >\n      <h2 style={{color: \"yellow\"}}>Trait Contest</h2>\n\n      <p>\n      Don't let anyone tell you differently - fish and fashion fit well together. Paddle home, pull the kelp aside and take a look in your wardrobe or attic. What do you find there? What makes a great trait for a Koin Koi? Or do you think of something completely different?   \n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#2f8c1f', color: '#fff' }}\n      icon={<FaChild />}\n    >\n      <h2 style={{color: \"yellow\"}}>Meme Contest</h2>\n\n      <p>\n      Your life in the pond is wonderful, swimming greatly satisfies you. You are a part of the ever growing koimmunity - but how much of a meme fish are you really? Take part in the koitastic meme contest and show your devotion and meme lord skills. Create a meme about Koin Koi and have a chance to win a NFT!  \n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#2f8c1f', color: '#fff' }}\n      icon={<FaClipboardList />}\n    >\n      <h2 style={{color: \"yellow\"}}>Reveal Whitepaper 1.0</h2>\n\n      <p>\n        Launching, then maybe rolling the dice for some random perks? \n        <br/><b>*Scandalised Koi noises*</b>\n        <br/>Pond breeding is a sophisticated craftsmanship and fulfilling our academic responsibility we will publish a Whitepaper that defines our recipes of Pondmap 1.0. \n        <br/>Before launch.\n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#822e2e', color: '#fff' }}\n      icon={<FaClipboardList />}\n    >\n      <h2 style={{color: \"yellow\"}}>Rarity Table leaked</h2>\n\n      <p>\n      Every Koi is beautiful and deserves to be loved - they do come in many shapes, colors and outfits. But nevertheless you noticed that some traits occur more often than others. And you are pretty sure you have seen some only once during your time in the pond. Now you have certainty and know about the rarity of the individual traits.\n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#822e2e', color: '#fff' }}\n      date=\"07th October 7PM UTC\"\n      icon={<FaBalanceScaleLeft />}\n    >\n      <h2 style={{color: \"yellow\"}}>Early Supporter Presale</h2>\n\n      <p>\n      All Koi are loved equally - no exceptions. However some of them joined the pond quite a while ago and were the first ones paddling in it. They have seen the koimmunity grow and have thus earned the right to take part in the pre-sale.\n      </p>\n    </VerticalTimelineElement>\n\n    {/* <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#822e2e', color: '#fff' }}\n      icon={<FaBalanceScale />}\n    >\n      <h2 style={{color: \"yellow\"}}>Early Access Sale</h2>\n\n      <p>\n      The early fish catches the worm - but there is no fishhook attached to it. This is no bait - the pond is preparing for its big objective: To spread the magnificence of Koin Koi all over the Solana blockchain. Take part in this early access sale and grab your Koin Koi just before the big rush begins!\n      </p>\n    </VerticalTimelineElement> */}\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      date=\"08th October 7PM UTC\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#822e2e', color: '#fff' }}\n      icon={<FaBalanceScaleRight />}\n    >\n      <h2 style={{color: \"yellow\"}}>Mainsale</h2>\n      <p>\n      The tide finally has risen and the streaming river of enthusiasm has made to pond bursting its banks - the Koi are free! And they're ready to see the world. Nothing can stop the stampede of fins. This is the moment we worked for so hard. 1,111 unique Koin Koi have made their way to the Solana blockchain. Take your chance and show that you are a true Koi.\n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#822e2e', color: '#fff' }}\n      icon={<FaCommentsDollar />}\n    >\n      <h2 style={{color: \"yellow\"}}>List on different marketplaces for conquering ponds all over the world</h2>\n\n      <p>\n      Now there is nothing to stop the Koi from conquering ponds all over the world. Fishy greatness is to be seen all around various marketplaces. To in-fin-ity and beyond!\n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#822e2e', color: '#fff' }}\n      icon={<FaDollarSign />}\n    >\n      <h2 style={{color: \"yellow\"}}>Koi HODL Cashback</h2>\n\n      <p>\n      As soon as you have minted your own Koin Koi it's all yours. Love it, trade it or keep it in your own little pond. Perhaps you've even got several of them? That's great indeed as HODLing Koin Koi may pay off. There will be  <a href=\"#cashbackHeader\">Cashback&nbsp;Events </a> exclusively for members that hold a Koi in their wallet!\n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#822e2e', color: '#fff' }}\n      icon={<FaDollarSign />}\n    >\n      <h2 style={{color: \"yellow\"}}>Pond swaggering</h2>\n\n      <p>\n      The neighbours grass is greener? His pond is certainly not bigger and Koi are everything that matters. Collaborations, unexpected airdrops to the Koimmunity (additional to Cashbacks) and more candies in diverse shapes - we call it the \"Koi Swaggering Phase\".\n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#822e2e', color: '#fff' }}\n      icon={<FaDollarSign />}\n    >\n      <h2 style={{color: \"yellow\"}}>Pond scaling</h2>\n\n      <p>\n      Join the pond in all its carpnificence and support your high-end kois. There can be side-collections that temporarily open the gates to freshly bred Koi. Some Koi were already spotted carrying offsprings on their backs... \n      </p>\n    </VerticalTimelineElement>\n\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: background, boxShadow: \"#fff\"}}\n      contentArrowStyle={{ borderRight: '7px solid  rgb(255, 255, 255)' }}\n      iconStyle={{ background: '#822e2e', color: '#fff' }}\n      icon={<FaCalendarWeek />}\n    >\n      <h2 style={{color: \"yellow\"}}>Koimmunity Events - to decided together</h2>\n\n      <p>\n      It's not only about having a Koin Koi, it's about the Koimmunity, without whom the Koi Story wouldn't have been as great as it has been. As we want to give something back to them, we're planning some events for our koimmunity members. Stay tuned!\n      </p>\n    </VerticalTimelineElement>\n\n\n    \n\n  </VerticalTimeline>\n\n  )\n}","import React, { useState } from 'react';\nimport Carousel, { Dots, slidesToShowPlugin, autoplayPlugin } from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport { Image } from 'antd';\n\n\nexport const FishCarousel = () => {\n\n  return (\n    <div id=\"carouselWrapper\" >\n        <Carousel\n          plugins={[\n            'arrows',\n            \"infinite\",\n            {\n              resolve: slidesToShowPlugin,\n              options: {\n\n              numberOfSlides: 4,\n              }\n            },\n          ]}\n\n          breakpoints={{\n            650: {\n              plugins: [\n                'arrows',\n            \"infinite\",\n               {\n                 resolve: slidesToShowPlugin,\n                 options: {\n                  numberOfSlides: 1\n                 }\n               },\n             ]\n            },\n            1100: {\n              plugins: [\n                'arrows',\n                \"infinite\",\n               {\n                 resolve: slidesToShowPlugin,\n                 options: {\n                  numberOfSlides: 2\n                 }\n               },\n             ]\n            },\n            \n            1600: {\n              plugins: [\n                'arrows',\n                \"infinite\",\n               {\n                 resolve: slidesToShowPlugin,\n                 options: {\n                  numberOfSlides: 3\n                 }\n               },\n             ]\n            }\n          }\n        }\n        >\n          \n          <div className={\"cardDivStyle\"}>{<Image className={\"imgStyle\"} src={\"img/Base3.jpg\"}></Image>}\n          <h1>Sir Surfsalot!</h1>\n          </div>\n          <div className={\"cardDivStyle\"}>{<Image className={\"imgStyle\"} src={\"img/CollabSnailana.jpg\"}></Image>}\n          <h1>Snailana Collab!</h1>\n          </div>\n          <div className={\"cardDivStyle\"}>{<Image preview={true} className={\"imgStyle\"} src={\"img/RoboKoi.jpg\"}></Image>}\n          <h1>Robo Koi!</h1>\n          </div>\n          <div className={\"cardDivStyle\"}>{<Image className={\"imgStyle\"} src={\"img/TattooKoi.jpg\"}></Image>}\n          <h1>Koimmunity inspired!</h1>\n          </div>\n          <div className={\"cardDivStyle\"}>{<Image className={\"imgStyle\"} src={\"img/PreviewKoi4.jpg\"}></Image>}\n          <h1>{'<3'}!</h1>\n          </div>\n          \n          <div className={\"cardDivStyle\"}>{<Image className={\"imgStyle\"} src={\"img/MaskedFish.jpg\"}></Image>}\n          <h1>Masked Koi!</h1>\n          </div>\n          <div className={\"cardDivStyle\"}>{<Image className={\"imgStyle\"} src={\"img/Sensei.jpg\"}></Image>}\n          <h1>Solana Sensei!</h1>\n          </div>\n          <div className={\"cardDivStyle\"}>{<Image className={\"imgStyle\"} src={\"img/ZombiekoiGrey.jpeg\"}></Image>}\n          <h1>Zombie Koi!</h1>\n          </div>\n      </Carousel>\n        </div>\n  )\n}","import React, { useEffect, useState, useRef } from \"react\";\nimport \"react-step-progress-bar/styles.css\";\n// @ts-ignore\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\nimport { SOLTicker } from \"../SOLTicker\";\n\n\n\nconst getCashbackSum = (prices, counter) => {\n  let result = 0;\n  prices.slice(0, counter).forEach(element => {\n    result += parseInt(element.replace(\",\", \"\"));\n});\nreturn result;\n}\n\nconst getCashbackSumFormatted = (prices, counter) => {\n  let sum = getCashbackSum(prices, counter).toString();\n  if(sum == \"0\"){\n    return \"0\";\n  }\n  return sum.slice(0,-3) + \",\" + sum.slice(-3);\n\n}\n\nconst getCashbackToSolString = (cashbackRate, solPrice) => {\n  return cashbackRate + \"$ &asymp; \"+(parseInt(cashbackRate.replace(\",\", \"\")) / solPrice).toFixed(2)+\" SOL\";\n}\n\n\nconst getStep = (cashbackEventCounter, cashbackRates, addText = \"\", preText = \"\") => {\n  \n  return <Step transition=\"scale\">\n          {({ accomplished, index }) => ( \n             <div className={\"stepDiv \" + (cashbackEventCounter == index ? \"active\" : \"inactive\")}>     \n            <img\n              style={{ filter: `grayscale(${accomplished ? 0 : 80}%)` }}\n              width=\"30\"\n              src=\"img/schnabulator.png\"\n            />\n            <p  \n            className=\"stepText\">{preText}{cashbackRates[index]}{addText}</p>\n            </div>\n\n          )}\n      </Step>\n}\n\n\nconst useProgress = (progressSteps) => {\n  const [progress, setProgress] = useState(0);\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      \n      if(progress < 100){\n        \n        setProgress(progress => (progress + progressSteps) );\n      }\n\n      else if(counter < 4){\n        setCounter(counter => counter+1);\n      }\n      else{\n        setCounter(0);\n        setProgress(0);\n      }\n\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [progress, counter]);\n\n\n\n  useEffect(() => {\n    setProgress(progress);\n  }, [progress]);\n\n  return progress;\n};\n\nexport const CashbackProgress = () => {\n  const solPrice = SOLTicker();\n  let progressSteps = 8.34; //Has to be slightly above the exact number, so 'accomplished' is set properly (necessary for bounce effect)\n  const progress = useProgress(progressSteps);\n  \n  const cashbackEventCounter = Math.round(progress / progressSteps);\n  const cashbackRates = [\n    \"0\",\n    \"2,500\", \"2,500\", \"2,500\", \"2,500\",\"5,000\", \n    \"2,500\", \"2,500\", \"2,500\", \"2,500\", \"10,000\", \n    \"5,000\", \"10,000\"\n\n  ];\n  const cashbackSteps = [\n    0,\n    100, 200, 300, 400, 500,\n    600, 700, 800, 900, 1000, \n    1100, 1111\n  ];\n\n\n    return (\n    <div>\n      <div className = \"progressBarDiv\">\n        <h1 className=\"cashbackEventH1\">Minted NFTs:</h1>\n      <ProgressBar\n        percent={progress > 100 ? 100 : progress}\n        hasStepZero={true}\n        filledBackground=\"linear-gradient(to right, #fefb72, #f0bb31)\"\n      >\n        {getStep(cashbackEventCounter, cashbackSteps, \"\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\", \">\")}\n        {getStep(cashbackEventCounter, cashbackSteps, \"\")}\n      </ProgressBar>\n\n      \n      </div>\n\n      <h1 className=\"cashbackEventH1\">{'=>'} Weekly Cashback Events after mint: {cashbackEventCounter}</h1>\n\n\n\n\n\n\n\n\n\n\n\n            {/*SECOND PROGRESS BAR*/}\n\n\n      \n\n      <div className=\"arrow\">\n                <span></span>\n                <span></span>\n                <span></span>\n      </div>\n\n\n      <div className = \"progressBarDiv\">\n        <h1 className=\"cashbackEventH1\">Cashback Amount for week {cashbackEventCounter}:</h1>\n        <h2 className=\"cashbackEventH1 solPriceTicker\">Final rates may be slightly different (depends on SOL and Mint price)</h2>\n      <ProgressBar\n        percent={progress > 100 ? 100 : progress}\n        hasStepZero={true}\n        filledBackground=\"linear-gradient(to right, #fefb72, #f0bb31)\"\n      >\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n        {getStep(cashbackEventCounter, cashbackRates, \"$\")}\n      </ProgressBar>\n{/*<br/>&asymp;<br/>{(parseInt(cashbackRates[19].replace(\",\", \"\")) / solPrice).toFixed(2)} SOL*/}\n      \n      </div>\n\n      <h1 className=\"cashbackEventH1\">Total Cashback: <br/>{getCashbackSumFormatted(cashbackRates, cashbackEventCounter+1)}$ &asymp; {(getCashbackSum(cashbackRates, cashbackEventCounter+1) / solPrice).toFixed(2)} SOL</h1>\n      <h2 className=\"cashbackEventH1 solPriceTicker\">SOL Price Ticker: <br/>1 SOL &asymp; <span className=\"solPriceClass\" id=\"solPrice\">{solPrice}$</span></h2>\n    </div>\n      \n    );\n  \n\n\n}","import { useEffect, useState, useRef } from 'react';\nimport $ from 'jquery';\n\nexport const SOLTicker = () => {\n    \n\n    const [solPrice, setSolPrice] = useState(0);\n    const solPriceSpan = document.getElementById(\"solPrice\");\n    useEffect(() => {\n        const intervalId = setInterval(() => {         \n            $.ajax({\n                url: \"https://api.binance.com/api/v3/ticker/price?symbol=SOLUSDT\",\n                dataType: \"json\",\n                method: \"GET\",\n                success: function(response) {\n                    setSolPrice(response.price);\n                    /*if(solPrice.toString() != response.price.toString()){                       \n                        solPriceSpan?.classList.toggle(\"changePrice\");                    \n                    }*/\n                }\n              });\n    \n        }, 3000);\n        return () => clearInterval(intervalId);\n      }, [solPrice]);\n\n    return parseFloat(solPrice.toString());\n  }\n","import React, { useState } from 'react';\n\nimport { Image } from 'antd';\n\n\nexport const Team = () => {\n\n  return (\n    <div className=\"teamWrapper\">\n      <div className=\"teamEntry\">\n        <img className=\"teamEntryImage\" src=\"img/schnabulator.png\"></img>\n        <h1>Schnabulator</h1>\n        <p className=\"textParagraph\" >IT-Security Researcher<br/>Working with crypto for 3+ years.</p>\n      </div>\n      <div className=\"teamEntry\">\n        <img className=\"teamEntryImage\" src=\"img/lilly.png\"></img>\n        <h1>Lilly</h1>\n        <p className=\"textParagraph\" >Artist<br></br>Devoted to animals, writing and drawing.</p>\n      </div>\n      <div className=\"teamEntry\">\n        <img className=\"teamEntryImage\" src=\"img/pandalf.png\"></img>\n        <h1>Pandalf</h1>\n        <p className=\"textParagraph\" >Web-Developer<br/>Loves CSS. Hates CSS.</p>\n      </div>\n\n      \n      \n\n      <div className=\"teamEntry\">\n        <img className=\"teamEntryImage\" src=\"img/pixzel.png\"></img>\n        <h1>PixZel</h1>\n        <p className=\"textParagraph\" >Koimmunity Manager<br/>Memes are love, memes are life.</p>\n      </div>\n\n\n      <div className=\"teamEntry\">\n        <img className=\"teamEntryImage\" src=\"img/yoshi.png\"></img>\n        <h1>Yoshi</h1>\n        <p className=\"textParagraph\" >Koimmunity Manager<br/>Brain incorrectly wired, i am insane.</p>\n      </div>\n\n      <div className=\"teamEntry\">\n        <img className=\"teamEntryImage\" src=\"img/mathoul.png\"></img>\n        <h1>Mathoul</h1>\n        <p className=\"textParagraph\" >Koimmunity Manager<br/>Been there. Done that.</p>\n      </div>\n\n      <div className=\"teamEntry\">\n        <img className=\"teamEntryImage\" src=\"img/ghost.png\"></img>\n        <h1>Ghost</h1>\n        <p className=\"textParagraph\" >Attorney at Law<br/>Paragraph Connoisseur</p>\n      </div>\n    </div>\n  )\n}","import { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { Image } from \"antd\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport { fadeInUp } from 'react-animations';\n\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nimport { Timeline } from './components/Timeline';\nimport { FishCarousel } from './components/FishCarousel';\nimport { SocialIcon } from 'react-social-icons';\nimport { Layout } from \"antd\";\nimport 'antd/dist/antd.css'\nimport { Header } from \"./components/Header\";\nimport { CashbackProgress } from \"./components/CashbackProgress\";\nimport { Footer } from \"./components/Footer\";\nimport CountUp from \"react-countup\";\nimport { Team } from \"./components/Team\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nconst FadeInAnimation = keyframes`${fadeInUp}`;\n\nconst FadeInDiv = styled.div`\n  animation: 1s ${FadeInAnimation};\n`;\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(() => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  }, [wallet, props.candyMachineId, props.connection]);\n\n  return (\n    <main className=\"mainLayout\">\n      \n      {/* \n      <Header></Header>\n      {wallet && (\n        <p>Address: {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>\n      )}\n\n      {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>}\n\n      {wallet && <p>Total Available: {itemsAvailable}</p>}\n\n      {wallet && <p>Redeemed: {itemsRedeemed}</p>}\n\n      {wallet && <p>Remaining: {itemsRemaining}</p>}\n\n      <MintContainer>\n        {!wallet ? (\n          <ConnectButton>Connect Wallet</ConnectButton>\n        ) : (\n          <MintButton\n            disabled={isSoldOut || isMinting || !isActive}\n            onClick={onMint}\n            variant=\"contained\"\n          >\n            {isSoldOut ? (\n              \"SOLD OUT\"\n            ) : isActive ? (\n              isMinting ? (\n                <CircularProgress />\n              ) : (\n                \"MINT\"\n              )\n            ) : (\n              <Countdown\n                date={startDate}\n                onMount={({ completed }) => completed && setIsActive(true)}\n                onComplete={() => setIsActive(true)}\n                renderer={renderCounter}\n              />\n            )}\n          </MintButton>\n        )}\n        </MintContainer>\n\n        <MintContainer>\n          {!wallet ? (\n            <ConnectButton>Connect Wallet</ConnectButton>\n          ) : (\n            <MintButton\n              disabled={isSoldOut || isMinting || !isActive}\n              onClick={onMint}\n              variant=\"contained\"\n            >\n              {isSoldOut ? (\n                \"SOLD OUT\"\n              ) : isActive ? (\n                isMinting ? (\n                  <CircularProgress />\n                ) : (\n                  \"MINT\"\n                )\n              ) : (\n                <Countdown\n                  date={startDate}\n                  onMount={({ completed }) => completed && setIsActive(true)}\n                  onComplete={() => setIsActive(true)}\n                  renderer={renderCounter}\n                />\n              )}\n            </MintButton>\n          )}\n        </MintContainer> \n\n        <Snackbar\n          open={alertState.open}\n          autoHideDuration={6000}\n          onClose={() => setAlertState({ ...alertState, open: false })}\n        >\n          <Alert\n            onClose={() => setAlertState({ ...alertState, open: false })}\n            severity={alertState.severity}\n          >\n            {alertState.message}\n          </Alert>\n        </Snackbar>   */}\n\n\n\n\n\n<FadeInDiv className=\"welcomeDiv\">\n\n        <div className=\"welcomeHeadings\">\n          {/*\n      <Link  to={'/roadmap'} ><h1><a className=\"navLinks\" >View Roadmap <FaArrowAltCircleRight style={{transform: \"translateY(+20%)\"}}/></a></h1> </Link>\n    \n      <hr style={{marginBottom: \"50px\"}}className=\"horizontal-divider\"></hr>\n      */}\n          <h1>Public Mint Date: <span className=\"welcomeNumber\">October 08th, 7PM UTC</span></h1>\n          <br/>\n          <h1>Presale: <span className=\"welcomeNumber\">\n                <Countdown\n                  date={new Date(1633633200000)}\n                  onMount={({ completed }) => completed && setIsActive(true)}\n                  onComplete={() => setIsActive(true)}\n                  renderer={renderCounter}\n                />\n            </span></h1>\n            <br/>\n          <h1>Mainsale: <span className=\"welcomeNumber\">\n                <Countdown\n                  date={startDate}\n                  onMount={({ completed }) => completed && setIsActive(true)}\n                  onComplete={() => setIsActive(true)}\n                  renderer={renderCounter}\n                />\n            </span></h1>\n          \n          \n          {/*<h1>Please join our <a className=\"social-links\" href=\"https://discord.gg/Re4ADVBjV5\">Discord</a> and follow us on <a className=\"social-links\" href=\"https://twitter.com/KoinKoi_io\">Twitter</a> for updates.</h1>*/}\n        </div>\n        </FadeInDiv>\n\n\n\n\n    <FadeInDiv className=\"welcomeDiv\">\n\n        <div className=\"welcomeHeadings\">\n          {/*\n      <Link  to={'/roadmap'} ><h1><a className=\"navLinks\" >View Roadmap <FaArrowAltCircleRight style={{transform: \"translateY(+20%)\"}}/></a></h1> </Link>\n    \n      <hr style={{marginBottom: \"50px\"}}className=\"horizontal-divider\"></hr>\n      */}\n      \n          <div>\n            <h1>You made it, you found the Koi pond.</h1>\n            <br/>\n            <h1>Koin Koi is an extremly exclusive NFT Collection hosted on Solana.</h1>\n            <br/>\n            <h1>Hand-drawn Attributes: <span className=\"welcomeNumber\"><CountUp delay={1.5} useEasing={true} end={200} duration={8}></CountUp>+</span></h1>\n            <br/>\n            <h1>Uniquely generated NFTs: <span className=\"welcomeNumber\"><CountUp delay={1.5} useEasing={true} separator={\",\"} end={1111} duration={8}></CountUp></span></h1>\n            <br/>\n            <h1>Possible Cashback to Koi HODLers: <span className=\"welcomeNumber\"><CountUp delay={1.5} useEasing={true} separator={\",\"} end={50000} duration={8}></CountUp>$</span></h1>\n            <br/>\n            <h1>Mint Price: <span className=\"welcomeNumber\">3 SOL</span></h1>\n            <br/>\n          </div>\n\n          <div>\n                <Image className=\"yinyang\" src=\"img/Yin.png\"></Image>\n              <Image className=\"yinyang\" src=\"img/Yang.png\"></Image>\n          </div>\n          {/*<h1>Please join our <a className=\"social-links\" href=\"https://discord.gg/Re4ADVBjV5\">Discord</a> and follow us on <a className=\"social-links\" href=\"https://twitter.com/KoinKoi_io\">Twitter</a> for updates.</h1>*/}\n        </div>\n\n       \n      \n\n\n        {/*<div className=\"constructionHeadings\">\n          <div className={\"cardDivStyle\"}>{<Image style={imgStyle} src={\"img/Base1.jpg\"}></Image>}</div>\n          <div className={\"cardDivStyle\"}>{<Image style={imgStyle} src={\"img/Base2.jpg\"}></Image>}</div>\n          <div className={\"cardDivStyle\"}>{<Image style={imgStyle} src={\"img/Base3.jpg\"}></Image>}</div>\n          <p></p>\n          <div className={\"cardDivStyle\"}>{<Image style={imgStyle} src={\"img/MaskedFish.jpg\"}></Image>}\n          <h1>New!</h1>\n          </div>\n          <div className={\"cardDivStyle\"}>{<Image style={imgStyle} src={\"img/TattooKoi.jpg\"}></Image>}\n          <h1>New!</h1>\n          </div>\n          <div className={\"cardDivStyle\"}>{<Image style={imgStyle} src={\"img/PreviewKoi4.jpg\"}></Image>}\n          <h1>New!</h1>\n          </div>\n          <p></p>\n          <div className={\"cardDivStyle\"}>{<Image style={imgStyle} src={\"img/CollabSnailana.jpg\"}></Image>}\n          <h1>Snailana Collab!</h1>\n          </div>\n  </div>*/}\n\n\n\n        {/*}\n        <Coverflow width=\"1000%\" height=\"600\" classes={{background: 'rgb(233, 23, 23)'}} className=''\n          displayQuantityOfSide={2}\n          navigation={true}\n          enableScroll={true}\n          clickable={true}\n          active={3}\n          enableHeading={false}\n          currentFigureScale={1.0}\n          otherFigureScale={0.6}\n          \n        >\n\n      <img width=\"3500\" src='img/Base1.jpg' alt='Base 1' data-action=\"/img/Base1.jpg\"/>\n      <img width=\"3500\" src='img/Base2.jpg' alt='Base 2' data-action=\"/img/Base2.jpg\"/>\n      <img width=\"3500\" src='img/Base3.jpg' alt='Base 3' data-action=\"/img/Base3.jpg\"/>\n      <img width=\"3500\" src='img/MaskedFish.jpg' alt='Masked Fish' data-action=\"/img/MaskedFish.jpg\"/>\n      <img width=\"3500\" src='img/TattooKoi.jpg' alt='Tattoo Koi' data-action=\"/img/TattooKoi.jpg\"/>\n      <img width=\"3500\" src='img/PreviewKoi4.jpg' alt='Preview Koi 4' data-action=\"/img/PreviewKoi4.jpg\"/>\n      <img width=\"3500\" src='img/CollabSnailana.jpg' alt='Collab Snailana' data-action=\"/img/CollabSnailana.jpg\"/>\n    </Coverflow> \n*/}\n\n      <FishCarousel/>\n      </FadeInDiv>\n\n\n      <FadeInDiv className=\"cashbackDiv\">\n        <div id=\"cashbackHeader\" className=\"constructionHeadings\">\n          <h1>Koin Koi Cashback events!</h1>\n          <hr style={{ marginBottom: \"50px\" }} className=\"horizontal-divider\"></hr>\n        \n        <p className=\"textParagraph\">\n        Parts of the proceeds from the minting are used to fund Cashback events that reward randomly chosen Koi HODLers (may be multiple). The amount and prices of these Cashback Events are directly linked to the success of minting: <br/><u>The more Koi are minted, the more Cashback events will be hosted</u>.\n        <br></br>\n        </p>\n        <br></br> <br></br>\n        <h1>Example Cashbacks after Mint:</h1>\n        </div>\n        <CashbackProgress/>\n      </FadeInDiv>\n\n        {/* <hr style={{ marginBottom: \"50px\" }} className=\"horizontal-divider\"></hr> */}\n        \n        \n        <FadeInDiv className=\"pondmapDiv\">\n          <div id=\"pondmapHeader\" className=\"constructionHeadings\">\n            <h1>Pondmap 1.0</h1>\n            <hr style={{ marginBottom: \"50px\" }} className=\"horizontal-divider\"></hr>\n          </div>\n          \n\n          <Timeline></Timeline>\n          <p className=\"timelineArrow\">▼</p>\n          <div  className=\"constructionHeadings\">\n            <h1>In-fin-ity</h1>\n            <p className=\"textParagraph\">The Pond evolves and Pondmap 2.0 is unlocked upon success.</p>\n            <p className=\"textParagraph\">\n              This will cover founding a company, expand the Koin Koi brand and fund large-scale products that characteristics can be co-determined by Koin Koi holders. We have two (but are open to others) very ambitious ideas here: \n              < br/>\n              < br/>A platform that builds a bridge between 3D-Printing and NFTs.\n              <br/>+\n              <br/>An AR Game that is not necessarily limited to our own NFT Collection.\n              < br/>\n              <br/>These amibitious plans heavily depend on success and funding - therefore we capsulate them in a possible Roadmap 2.0 for the years to come.\n              <br/>All benefits (Cashbacks, Candies, Burning) from Roadmap 1.0 are independent from this and will be distributed either way.\n            </p>\n          </div>\n        </FadeInDiv>\n\n        <FadeInDiv className=\"teamDiv\">\n        <div id=\"teamHeader\" className=\"constructionHeadings\">\n            <h1>Team</h1>\n            <hr className=\"horizontal-divider\"></hr>\n        </div>\n          \n        <Team></Team>\n        \n        </FadeInDiv>\n        \n\n      \n\n      \n\n      </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;\n","import { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport { fadeInUp } from 'react-animations';\n\n\nimport 'antd/dist/antd.css'\n\nimport { CashbackProgress } from \"./components/CashbackProgress\";\nimport Collapsible from 'react-collapsible';\nimport CountUp from \"react-countup\";\nimport { Team } from \"./components/Team\";\nimport { Image } from \"antd\";\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nconst FadeInAnimation = keyframes`${fadeInUp}`;\n\nconst FadeInDiv = styled.div`\n  animation: 1s ${FadeInAnimation};\n`;\n\nconst Whitepaper = () => {\n  \n\n  return (\n    <main className=\"mainLayout\">\n\n    <div className=\"constructionHeadings\">\n      <h1>Whitepaper 1.0</h1>\n      <p className=\"textParagraph \">These pages explain only some of the key mechanisms of Koin Koi NFTs.\n      <br/>\n      <br/>\n      We will setup three funds that will hold locked capital:\n\n      </p>\n          <p className=\"textParagraph\" style={{textAlign: \"center\"}}>\n          <br/> Cashback Fund\n          <br/> Candy Fund\n          <br/> Burning Fund\n          </p>\n      <br/>\n\n\n      <p className=\"textParagraph\">\n      Their details are explained in the subsequent sections below.\n      <br/>In short: Cashbacks are very transparent and pre-regulated rewards. Candies are more abstract rewards that come unannounced and in various shapes. Burning supports floor-price resistance in bear-cycles.\n      <br/>After installing these funds with parts from the proceeds from the minting, they can be extended and refilled through our Scaling mechanism and Royalties.\n      <br/><br/>\n      </p>\n\n      <Image className=\"lifecycle\" src=\"img/lifecycle.png\"></Image>\n      <br/><br/>\n    </div>\n\n\n      <Collapsible className=\"noSelect\" trigger=\"Cashback mechanism\">\n\n        <div className=\"constructionHeadings\">\n          <p className=\"textParagraph\">\n          <h3><u>The problem:</u><br></br></h3>\n          Many projects suffer from uncertainty of possible utility or benefits for their project. Some promise an insane roadmap that can be accomplished only after years or with big (often non-existent) investors behind the project. This brings the NFT collector in a difficult position: Will the project follow through? What happens after the mint? What happens in a bear-market? Is there any benefit beside the art? This natural scepsis sometimes leads to sudden sellouts and prices cascading down a few days or weeks after mint, especially if there was no sellout.\n        </p>\n\n        <hr  className=\"horizontal-divider\"></hr>\n        \n        <p className=\"textParagraph\">\n          <h3><u>Our solution:</u><br></br></h3>\n          We also think big and have great things planned for the future, that need months or years to be accomplished and (we communicate this clearly) depend on the success of the Koi story.<br/>\n          That said, we designed Cashback Events as a clearly defined, graspable way of implementing a transparent benefit for all Koi NFT holders, that will last up to 12 Weeks (&asymp; 3 Months) <u>after</u> mint. Our intent is to inhibit sells and increase the demand for our NFTs even months after the mint. If there was no sellout, the chances of winning in a Cashback Event drastically increase. \n          <br/><u>Cashback Events are guaranteed if unlocked once</u>. \n          <br></br>\n        </p>\n        \n        <hr  className=\"horizontal-divider\"></hr>\n        \n        <p className=\"textParagraph\">\n          <h3><u>How it works:</u><br></br></h3>\n          Before the mint, we officially announce the Cashback Amounts per 100 mint batches (currently aimed to be 50,000$ in total as shown below.). When minting is over, we'll lock an equivalent of 50,000$ into a stable coin wallet like USDC.\n          <br/>\n          This wallet is called our <u>\"Koin Koi Cashback Fund\"</u>.\n          \n          <br/>\n          We will execute one Cashback Event per week (aimed for Sunday). Members can vote each week on the amount of NFT holders that can win the Cashback of the week, e.g. whether one persons will win it all or that the price shall be splitted through X persons. We will select the elected amount of random Koin Koi NFT in a transparent lottery - the associated wallet(s) will be airdropped an amount of SOL that is equivalent to the Cashback Rate of the current week divided through the amount of winners.\n          <br/>\n          <u>Cashback Rates are defined in $ and therefore remain independent from the SOL price!</u>\n           <br/>\n           That way our community is protected from sudden volatility of the crypto-market.\n          <br></br>\n        </p>\n\n        <br></br> <br></br>\n        <h1>Example Cashbacks after Mint:</h1>\n        </div>\n        <CashbackProgress/>\n    </Collapsible>\n\n\n    <Collapsible className=\"noSelect\" trigger=\"Candy mechanism\">\n\n        <div className=\"constructionHeadings\">\n          <p className=\"textParagraph\">\n          <h3><u>The problem:</u><br></br></h3>\n              Activity is one characteristic of a healthy community - but with days, weeks or months of perceived silence (e.g. because of bear-cycles) it naturally declines. Predictable rewards like Cashback Events are not sufficient to address this, as their stimulating effect declines over time because of the high predictability. \n              This relationship between contingency and rewards is actually a widely researched phenomenon in behavioral psychology.\n              <br/>How can a project encourage activity of a community?\n          </p>\n\n        <hr  className=\"horizontal-divider\"></hr>\n        \n        <p className=\"textParagraph\">\n          <h3><u>Our solution:</u><br></br></h3>\n            Aside from predictable rewards, a contingency between actions and rewards has to remain incalculable. We will setup a \"Candy fund\" that is used for surprise rewards called \"Candies\". \n            <br/>Candies are undefined in their shape, value, amount and occurrence probability.\n          </p>\n        \n        <hr  className=\"horizontal-divider\"></hr>\n        \n        <p className=\"textParagraph\">\n          <h3><u>How it works:</u><br></br></h3>\n          The Candy Fund will be installed and filled immediately after launch. The initial deposit depends on the success of minting - on a sellout we aim to provide 10,000$ which can then be extended through royalties or our scaling mechanism.\n          <br/>Examples for possible Candies:\n          <br/>\n          <p className=\"textParagraph\" style={{textAlign: \"left\"}}>\n            <br/> SOL Airdrops\n            <br/> NFT Airdrops from existing collections\n            <br/> NFT Airdrops from upcoming collections\n            <br/> Vouchers for Merchandise, Shopping, Events, ...\n            <br/> Access to special events that are planned for Koi Connoisseurs only\n            <br/>\n          </p>\n          <br/>\n          Community proposals will be considered obviously. \n          <br/>In contrary to Cashback Events, the requirements of being eligible to a Candy may be linked to additional activities. On the one hand, we can reward active members which was the whole point and on the other hand we can ensure that specific Candies go to people that have a use-case for it. \n          <br/>All members of the Koin Koi metaverse will always have the chance to participate in Candy relating events. \n\n        </p>\n\n        <br></br> <br></br>\n        </div>\n\n    </Collapsible>\n      \n    <Collapsible className=\"noSelect\" trigger=\"Burn mechanism\">\n\n    <div className=\"constructionHeadings\">\n          <p className=\"textParagraph\">\n          < h3><u>The problem:</u><br></br></h3>\n            The cryptoverse is volatile. There are weeks where the floor of NFT projects is being swept and there are days when many people are selling simultanously. If the latter happens for too many days in a row (e.g. in a bear-market), many projects ask their community to delist their NFTs to stop the downtrend, but what if they do not want to?\n          </p>\n\n        <hr  className=\"horizontal-divider\"></hr>\n        \n        <p className=\"textParagraph\">\n          <h3><u>Our solution:</u><br></br></h3>\n            As you can't simply rely on your community to delist their property in volatile days, we establish a burn mechanism (\"Burn Events\") to support the floor-price resistance at predefined thresholds. At least once in a month we use a separated fund to buy back some NFTs that are below a defined Threshold. \n            <br/><u>These NFT will be burned.</u>\n          <br></br>\n        </p>\n\n        <hr  className=\"horizontal-divider\"></hr>\n        <p className=\"textParagraph\">\n          <h3><u>How it works:</u><br></br></h3>\n            We will create a <u>\"Koin Koi Burning Fund\"</u> (similar to the \"Koin Koi Cashback Fund\") that will be used for \"Burn Events\". The initial threshold is aimed to be 1 SOL. When a Burn Event takes place, parts of the Burning Fund are used to buy back NFTs from the after-market that are priced below the Threshold. \n            <br/>These NFTs will be irrevocably burned in a transparent process. \n            <br/>The initial holdings of this fund depend on the success of minting. On a sellout we aim to lock 10,000$ to this fund (which can be extended through Royalties and Scaling).\n            <br/>The amount of buy-backs in a single burning event is limited, so the Burning Fund cannot be exhausted in a single event. The goal is not to burn every NFT below the threshold, but to repeatedly stimulate demand by shorting the circulating supply. \n            <br/>As this is a novel experiment, the threshold, amount and frequency may be changed at any time by Koin Koi to enable tight control to this mechanism. \n            <br/>That way we can ensure long-term liquidity of burning.\n        </p>\n        <br></br> <br></br>\n        </div>\n\n      </Collapsible>\n\n\n\n    <Collapsible className=\"noSelect\" trigger=\"Scaling mechanism\">\n\n    <div className=\"constructionHeadings\">\n          <p className=\"textParagraph\">\n          <h3><u>The problem:</u><br></br></h3>\n            The potency of a community usually depends on growth and activity. A sustainable community can only be built if it can provide significant value to its members.\n            Some of the rewards and perks for members of the Koin Koi metaverse require funding as well as possibly more ambitious plans for the future.\n            <br/>In addition, the lack of possibilites to join a community may actually damage any new interest and restrain growth.\n            <br/>How can a NFT project ensure long-term value, funding and growth?\n          </p>\n\n        <hr  className=\"horizontal-divider\"></hr>\n        \n        <p className=\"textParagraph\">\n          <h3><u>Our solution:</u><br></br></h3>\n            This is the opposite of our Burning mechanism. In good times when demand is high we will be able to launch side collections that are part of the Koin Koi metaverse. These collections allow to unlock new Cashback Events for all members and refill our three community funds for new activities and perks (which can also be refilled through Royalties).\n            <br/>Key point: unlike many other projects, this mechanism in combination with burning gives us control to bidirectionally scale the most valuable asset of our community - our Members.\n            <br/>Independently from this, we will use Royalties.\n          <br></br>\n        </p>\n\n        <hr  className=\"horizontal-divider\"></hr>\n        <p className=\"textParagraph\">\n          <h3><u>How it works:</u><br></br></h3>\n             The variables of launching a side collection (if, when, how many, mint price, supply size) will always be individual. The decision whether a Side Collection can be launched at all depends on the current state of the Koin Koi metaverse. There won't be side collections if we feel there is low demand as they have a risk to deflate the value of our NFTs.\n             <br/>In these constellations, funding can be ensured through Royalties. Being an exclusive Collection of only 1,111 pieces we will set these <u>Royalties to 10%</u>. The concrete distribution of the Royalties will be decided individually as this depends on the health state of our Cashback, Candy and Burning funds. \n             <br/>If a side collection is launched, every member of the Koin Koi metaverse automatically profits from the extensions made to the Cashback, Candy and Burning Funds. \n             <br/>Once you are part of our pond, you made it: the goal is not to disadvantage members but to provide new value without having them do a thing.\n             <br/>This also means: If there are any Cashback events remaining that were unlocked by a previous collection, it is protected to the same pool that unlocked these events. The surprise Candies and any new Cashback Events that are unlocked by the new Side Collection are distributed to all members of the Koin Koi metaverse. \n             <br/>This mechanism ensures funding, growth and new benefits for all existing and new members of Koin Koi.\n        </p>\n        <br></br> <br></br>\n        </div>\n\n      </Collapsible>\n\n      \n      \n\n\n      </main>\n  );\n};\n\n\nexport default Whitepaper;\n","import { SocialIcon } from \"react-social-icons\";\nimport {\n  HashLink as Link\n} from \"react-router-hash-link\";\nimport ScrollButton from \"../ScrollToTop\";\n\nexport const Header = () => {\n\n  \n  return (\n    <div className=\"header\">\n      <div className=\"app-left\">   \n          <a target=\"_blank\" href=\"https://solana.com/\"><img className=\"social-svg\" src=\"sol.svg\"></img></a>\n      </div>\n      <div className=\"app-right navDiv\">\n\n            <Link to=\"/\"> Home </Link>\n            &nbsp;|&nbsp;\n            <Link to=\"/#cashbackHeader\"> Cashback&nbsp;Events </Link>\n            &nbsp;|&nbsp;\n            <Link to=\"/#pondmapHeader\"> Roadmap </Link>\n            &nbsp;|&nbsp;\n            <Link to=\"/#teamHeader\"> Team </Link>\n            &nbsp;|&nbsp;\n            <Link to=\"/whitepaper\"> Whitepaper </Link>\n            \n            <SocialIcon url=\"https://twitter.com/KoinKoi_io\" label=\"Koin Koi Twitter\" style={{ width: 40, height: 40, margin: 10}}></SocialIcon>\n\n            <SocialIcon url=\"https://discord.gg/Re4ADVBjV5\" label=\"Koin Koi Discord\" style={{ width: 40, height: 40, margin: 10}}></SocialIcon>\n        \n\n      </div>\n      <div style={{clear: \"both\"}}></div>\n\n      \n    </div>\n    \n  );\n\n\n  \n};\n\n","import { SocialIcon } from \"react-social-icons\";\n\n\nexport const Footer = () => {\n\n  \n  return (\n\n    \n    <div className=\"footer\">\n        <div style={{ display: \"inline-block\" }}>\n          <SocialIcon url=\"https://twitter.com/KoinKoi_io\" label=\"Koin Koi Twitter\" style={{ width: 60, height: 60, margin: 25 }}></SocialIcon>\n          <SocialIcon url=\"https://discord.gg/Re4ADVBjV5\" label=\"Koin Koi Discord\" style={{ width: 60, height: 60, margin: 25 }}></SocialIcon>\n        </div>\n        <p>&copy; Koin Koi {new Date().getFullYear()}</p>\n    </div>\n    \n  );\n\n\n  \n};\n\n","import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Whitepaper from \"./Whitepaper\";\nimport { AnimatedSwitch } from 'react-router-transition';\nimport { Header } from \"./components/Header\";\nimport { Footer } from \"./components/Footer\";\nimport ScrollToTop from \"./components/ScrollToTop\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        \n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect>\n            <WalletDialogProvider>\n              \n              <Router>\n              <Header/>\n              <Switch\n\n                >\n                  <Route path=\"/whitepaper\">\n                    <Whitepaper />\n                  </Route>\n                  <Route path=\"/\">\n                    <Home\n                        candyMachineId={candyMachineId}\n                        config={config}\n                        connection={connection}\n                        startDate={startDateSeed}\n                        treasury={treasury}\n                        txTimeout={txTimeout}\n                      />\n                  </Route>\n                </Switch>\n                <Footer/>\n            </Router>\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}